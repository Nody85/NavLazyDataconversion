OBJECT Codeunit 170000 CopyTable
{
  OBJECT-PROPERTIES
  {
    Date=14.05.19;
    Time=10:44:23;
    Modified=Yes;
    Version List=LAZYDATACONV;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            CopyTable(18,90000,'PROJCONV',TRUE);
          END;

  }
  CODE
  {

    PROCEDURE CopyTable@59000(OldID@59000 : Integer;NewID@59001 : Integer;NewVersionlist@59005 : Text[50];CleanTable@59006 : Boolean);
    VAR
      OldObject@59002 : Record 2000000001;
      NewObject@59003 : Record 2000000001;
      Field@59004 : Record 2000000041;
      OldObjectMetadata@59007 : Record 2000000071;
      NewObjectMetadata@59008 : Record 2000000071;
    BEGIN
      OldObject.SETRANGE(Type,OldObject.Type::Table);
      OldObject.SETRANGE(ID,OldID);
      OldObject.FINDFIRST;
      OldObject.CALCFIELDS("BLOB Reference");

      NewObject.INIT;
      NewObject := OldObject;
      NewObject.Name := GenerateCopyTableName(OldObject.Name,'');
      NewObject."Version List" := NewVersionlist;
      IF NewID = 0 THEN
        NewObject.ID := GetLastTableNo
      ELSE
        NewObject.ID := NewID;
      NewObject.INSERT;

      OldObjectMetadata.SETRANGE("Object Type",OldObjectMetadata."Object Type"::Tabelle);
      OldObjectMetadata.SETRANGE("Object ID",OldID);
      OldObjectMetadata.FINDFIRST;

      NewObjectMetadata.INIT;
      NewObjectMetadata := OldObjectMetadata;
      NewObjectMetadata."Object ID" := NewObject.ID;
      NewObjectMetadata.INSERT;
      CLEAR(NewObjectMetadata."User Code");
      NewObjectMetadata.MODIFY(TRUE);

      COMMIT;
      IF CleanTable THEN
        CleanCopyTable(NewObject.ID);
    END;

    LOCAL PROCEDURE GetLastTableNo@59001() : Integer;
    VAR
      Object@59000 : Record 2000000001;
    BEGIN
      Object.SETRANGE(Type,Object.Type::Table);
      Object.SETRANGE(Object.ID,170000,181000);

      IF Object.FINDLAST THEN
        EXIT(Object.ID + 1)
      ELSE
        EXIT(170000);
    END;

    LOCAL PROCEDURE GenerateCopyTableName@59007(OldName@59000 : Text[50];TablePrefix@59002 : Text[10]) : Text[50];
    VAR
      Object@59001 : Record 2000000001;
    BEGIN
      IF TablePrefix = '' THEN
        TablePrefix := 'TEMP_';

      EXIT(TablePrefix+COPYSTR(OldName,1,MAXSTRLEN(Object.Name)-STRLEN(TablePrefix)));
    END;

    PROCEDURE CleanCopyTable@59005(TableNo@59000 : Integer);
    BEGIN
      //DeactivateSecondaryKey(TableNo); Crashes for now
      //CleanFields(TableNo);
    END;

    LOCAL PROCEDURE CleanFields@59002(TableNo@59001 : Integer);
    VAR
      Field@59000 : Record 2000000041;
    BEGIN
      Field.SETRANGE(TableNo,TableNo);
      IF Field.FINDSET(TRUE,TRUE) THEN
        REPEAT
          IF (Field."No." < 50000) AND NOT IsPrimaryKeyField(Field.TableNo,Field."No.") THEN
            Field.DELETE;
          IF (Field."No." > 100000) AND NOT IsPrimaryKeyField(Field.TableNo,Field."No.") THEN
            Field.DELETE;
        UNTIL Field.NEXT = 0;
    END;

    PROCEDURE IsPrimaryKeyField@59006(TableID@59000 : Integer;FieldID@59001 : Integer) : Boolean;
    VAR
      Key@59002 : Record 2000000063;
      Field@59003 : Record 2000000041;
    BEGIN
      Field.GET(TableID,FieldID);

      Key.SETRANGE(TableNo,Field.TableNo);
      Key.SETRANGE("No.",1,100);
      Key.SETFILTER(Key,STRSUBSTNO('*%1*',Field.FieldName));
      IF Key.FINDSET AND Key.Clustered THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE DeactivateSecondaryKey@59004(TableID@59000 : Integer) : Boolean;
    VAR
      Key@59002 : Record 2000000063;
      Field@59003 : Record 2000000041;
    BEGIN
      Field.SETRANGE(TableNo,TableID);
      IF Field.FINDSET THEN
        REPEAT
          Key.SETRANGE(TableNo,TableID);
          Key.SETRANGE("No.",Field."No.");
          //Key.SETFILTER(Key,STRSUBSTNO('*%1*',Field.FieldName));
          IF Key.FINDSET(TRUE) THEN
            REPEAT
              IF Key.Clustered = FALSE THEN BEGIN
                //Key.VALIDATE(Enabled,FALSE);
                //Key.MODIFY;
                Key.DELETE(TRUE);
              END;
            UNTIL Key.NEXT = 0;
        UNTIL Field.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

